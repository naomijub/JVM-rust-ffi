{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1","program":"/Users/julianaomiboeira/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","digest","/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=0e643ce37440e4bd","-C","extra-filename=-0e643ce37440e4bd","--out-dir","/Users/julianaomiboeira/Documents/ffi/j4rs/rust/target/rls/debug/deps","-L","dependency=/Users/julianaomiboeira/Documents/ffi/j4rs/rust/target/rls/debug/deps","--extern","generic_array=/Users/julianaomiboeira/Documents/ffi/j4rs/rust/target/rls/debug/deps/libgeneric_array-9b39bb6b1e496053.rlib","--cap-lints","allow","--error-format=json","--sysroot","/Users/julianaomiboeira/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/julianaomiboeira/Documents/ffi/j4rs/rust/target/rls/debug/deps/libdigest-0e643ce37440e4bd.rmeta"},"prelude":{"crate_id":{"name":"digest","disambiguator":[16003464570711557541,1366265880409683097]},"crate_root":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src","external_crates":[{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9133280923345920065,5169035037401655959]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[9811081489243518189,10016862334390338995]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16815776717140451016,2925157999366951619]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[691958925519256365,8521811007670917729]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[1208270804029039990,17990983620773607271]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[11705364677140973079,7726573435499814070]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":7,"id":{"name":"alloc","disambiguator":[5571127662207602070,12081818010283277997]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":8,"id":{"name":"libc","disambiguator":[9872675523737343627,13016261367480270594]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":9,"id":{"name":"unwind","disambiguator":[5564630398057371063,5134587089964058144]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":10,"id":{"name":"hashbrown","disambiguator":[7317189895424764231,14908133925595887831]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[7982293983073241509,18348097174152154939]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[3938710137457602349,12366108798000803370]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[124527115135685225,16528639863833681107]}},{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14633564717342525671,15444589222019281189]}}],"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":0,"byte_end":4578,"line_start":1,"line_end":141,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1165,"byte_end":1182,"line_start":33,"line_end":33,"column_start":17,"column_end":34},"alias_span":null,"name":"InvalidOutputSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1200,"byte_end":1206,"line_start":34,"line_end":34,"column_start":17,"column_end":23},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1252,"byte_end":1261,"line_start":36,"line_end":36,"column_start":21,"column_end":30},"alias_span":null,"name":"DynDigest","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":0,"byte_end":4578,"line_start":1,"line_end":141,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":53},{"krate":0,"index":77},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":112}],"decl_id":null,"docs":" This crate provides traits which describe functionality of cryptographic hash\n functions.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":729,"byte_end":739,"line_start":15,"line_end":15,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4951,"byte_end":4957,"line_start":9,"line_end":9,"column_start":11,"column_end":17},"name":"Digest","qualname":"::digest::Digest","value":"Digest","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"decl_id":null,"docs":" The `Digest` trait specifies an interface common for digest functions.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":4969,"byte_end":4979,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::digest::Digest::OutputSize","value":"type OutputSize: ArrayLength<u8>;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5040,"byte_end":5043,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"new","qualname":"::digest::Digest::new","value":"fn () -> Self","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Create new hasher instance\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5176,"byte_end":5181,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"input","qualname":"::digest::Digest::input","value":"fn <B> (&mut self, data: B) -> ()","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5274,"byte_end":5279,"line_start":20,"line_end":20,"column_start":8,"column_end":13},"name":"chain","qualname":"::digest::Digest::chain","value":"fn <B> (self, data: B) -> Self","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Digest input data in a chained manner.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5399,"byte_end":5405,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"result","qualname":"::digest::Digest::result","value":"fn (self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Retrieve result and consume hasher instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5610,"byte_end":5622,"line_start":29,"line_end":29,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::digest::Digest::result_reset","value":"fn (&mut self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5733,"byte_end":5738,"line_start":32,"line_end":32,"column_start":8,"column_end":13},"name":"reset","qualname":"::digest::Digest::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":5797,"byte_end":5808,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"output_size","qualname":"::digest::Digest::output_size","value":"fn () -> usize","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6092,"byte_end":6098,"line_start":45,"line_end":45,"column_start":8,"column_end":14},"name":"digest","qualname":"::digest::Digest::digest","value":"fn (data: &[u8]) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Convenience function to compute hash of the `data`. It will handle\n hasher creation, data feeding and finalization.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7359,"byte_end":7368,"line_start":9,"line_end":9,"column_start":11,"column_end":20},"name":"DynDigest","qualname":"::dyn_digest::DynDigest","value":"DynDigest","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"decl_id":null,"docs":" The `DynDigest` trait is a modification of `Digest` trait suitable\n for trait objects.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7491,"byte_end":7496,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"input","qualname":"::dyn_digest::DynDigest::input","value":"fn (&mut self, data: &[u8]) -> ()","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7580,"byte_end":7592,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"result_reset","qualname":"::dyn_digest::DynDigest::result_reset","value":"fn (&mut self) -> Box<[u8]>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Retrieve result and reset hasher instance\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7684,"byte_end":7690,"line_start":19,"line_end":19,"column_start":8,"column_end":14},"name":"result","qualname":"::dyn_digest::DynDigest::result","value":"fn (self: Box<Self>) -> Box<[u8]>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Retrieve result and consume boxed hasher instance\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7782,"byte_end":7787,"line_start":22,"line_end":22,"column_start":8,"column_end":13},"name":"reset","qualname":"::dyn_digest::DynDigest::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7846,"byte_end":7857,"line_start":25,"line_end":25,"column_start":8,"column_end":19},"name":"output_size","qualname":"::dyn_digest::DynDigest::output_size","value":"fn (&self) -> usize","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Get output size of the hasher\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":7936,"byte_end":7945,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"box_clone","qualname":"::dyn_digest::DynDigest::box_clone","value":"fn (&self) -> Box<DynDigest>","parent":{"krate":0,"index":60},"children":[],"decl_id":null,"docs":" Clone hasher state into a boxed trait object\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8904,"byte_end":8921,"line_start":7,"line_end":7,"column_start":12,"column_end":29},"name":"InvalidOutputSize","qualname":"::errors::InvalidOutputSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type for variable hasher initialization\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8893,"byte_end":8922,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1310,"byte_end":1315,"line_start":39,"line_end":39,"column_start":11,"column_end":16},"name":"Input","qualname":"::Input","value":"Input","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":90}],"decl_id":null,"docs":" Trait for processing input data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1454,"byte_end":1459,"line_start":44,"line_end":44,"column_start":8,"column_end":13},"name":"input","qualname":"::Input::input","value":"fn <B> (&mut self, data: B) -> ()","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Digest input data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1552,"byte_end":1557,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"chain","qualname":"::Input::chain","value":"fn <B> (mut self, data: B) -> Self","parent":{"krate":0,"index":87},"children":[],"decl_id":null,"docs":" Digest input data in a chained manner.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":92},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1847,"byte_end":1857,"line_start":57,"line_end":57,"column_start":11,"column_end":21},"name":"BlockInput","qualname":"::BlockInput","value":"BlockInput","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" Trait to indicate that digest function processes data in blocks of size\n `BlockSize`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1869,"byte_end":1878,"line_start":58,"line_end":58,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockInput::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1968,"byte_end":1979,"line_start":62,"line_end":62,"column_start":11,"column_end":22},"name":"FixedOutput","qualname":"::FixedOutput","value":"FixedOutput","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" Trait for returning digest result with the fixed size\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":95},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":1991,"byte_end":2001,"line_start":63,"line_end":63,"column_start":10,"column_end":20},"name":"OutputSize","qualname":"::FixedOutput::OutputSize","value":"type OutputSize: ArrayLength<u8>;","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2081,"byte_end":2093,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"fixed_result","qualname":"::FixedOutput::fixed_result","value":"fn (self) -> GenericArray<u8, Self::OutputSize>","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Retrieve result and consume hasher instance.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2213,"byte_end":2227,"line_start":70,"line_end":70,"column_start":11,"column_end":25},"name":"VariableOutput","qualname":"::VariableOutput","value":"VariableOutput: core::marker::Sized","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102}],"decl_id":null,"docs":" Trait for returning digest result with the variable size\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2511,"byte_end":2514,"line_start":76,"line_end":76,"column_start":8,"column_end":11},"name":"new","qualname":"::VariableOutput::new","value":"fn (output_size: usize) -> Result<Self, InvalidOutputSize>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Create new hasher instance with the given output size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2655,"byte_end":2666,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"output_size","qualname":"::VariableOutput::output_size","value":"fn (&self) -> usize","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Get output size of the hasher instance provided to the `new` method\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2874,"byte_end":2889,"line_start":85,"line_end":85,"column_start":8,"column_end":23},"name":"variable_result","qualname":"::VariableOutput::variable_result","value":"fn <F> (self, f: F) -> ()","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Retrieve result via closure and consume hasher.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3013,"byte_end":3023,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"vec_result","qualname":"::VariableOutput::vec_result","value":"fn (self) -> Vec<u8>","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Retrieve result into vector and consume hasher.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2982,"byte_end":3005,"line_start":88,"line_end":88,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":104},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3327,"byte_end":3336,"line_start":98,"line_end":98,"column_start":11,"column_end":20},"name":"XofReader","qualname":"::XofReader","value":"XofReader","parent":null,"children":[{"krate":0,"index":105}],"decl_id":null,"docs":" Trait for describing readers which are used to extract extendable output\n from XOF (extendable-output function) result.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3426,"byte_end":3430,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"read","qualname":"::XofReader::read","value":"fn (&mut self, buffer: &mut [u8]) -> ()","parent":{"krate":0,"index":104},"children":[],"decl_id":null,"docs":" Read output into the `buffer`. Can be called unlimited number of times.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":106},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3536,"byte_end":3552,"line_start":104,"line_end":104,"column_start":11,"column_end":27},"name":"ExtendableOutput","qualname":"::ExtendableOutput","value":"ExtendableOutput: core::marker::Sized","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"decl_id":null,"docs":" Trait which describes extendable-output functions (XOF).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":107},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3585,"byte_end":3591,"line_start":105,"line_end":105,"column_start":10,"column_end":16},"name":"Reader","qualname":"::ExtendableOutput::Reader","value":"type Reader: XofReader;","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3669,"byte_end":3679,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"xof_result","qualname":"::ExtendableOutput::xof_result","value":"fn (self) -> Self::Reader","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Retrieve XOF reader and consume hasher instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3796,"byte_end":3806,"line_start":112,"line_end":112,"column_start":8,"column_end":18},"name":"vec_result","qualname":"::ExtendableOutput::vec_result","value":"fn (self, n: usize) -> Vec<u8>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Retrieve result into vector of specified length.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3765,"byte_end":3788,"line_start":111,"line_end":111,"column_start":5,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3984,"byte_end":3989,"line_start":120,"line_end":120,"column_start":11,"column_end":16},"name":"Reset","qualname":"::Reset","value":"Reset","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" Trait for resetting hash instances\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":4076,"byte_end":4081,"line_start":122,"line_end":122,"column_start":8,"column_end":13},"name":"reset","qualname":"::Reset::reset","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Reset hasher instance to its initial state and return current state.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6220,"byte_end":6221,"line_start":48,"line_end":48,"column_start":67,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8044,"byte_end":8045,"line_start":31,"line_end":31,"column_start":70,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8663,"byte_end":8666,"line_start":59,"line_end":59,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8946,"byte_end":8963,"line_start":9,"line_end":9,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":9123,"byte_end":9140,"line_start":16,"line_end":16,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/digest.rs","byte_start":6220,"byte_end":6221,"line_start":48,"line_end":48,"column_start":67,"column_end":68},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8044,"byte_end":8045,"line_start":31,"line_end":31,"column_start":70,"column_end":71},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":68},"to":{"krate":0,"index":60}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/dyn_digest.rs","byte_start":8663,"byte_end":8666,"line_start":59,"line_end":59,"column_start":16,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":7,"index":75},"to":{"krate":1,"index":2002}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":8946,"byte_end":8963,"line_start":9,"line_end":9,"column_start":23,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":6704}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/errors.rs","byte_start":9123,"byte_end":9140,"line_start":16,"line_end":16,"column_start":23,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":113},"to":{"krate":6,"index":1537}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":2243,"byte_end":2248,"line_start":70,"line_end":70,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":1391},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/julianaomiboeira/.cargo/registry/src/github.com-1ecc6299db9ec823/digest-0.8.1/src/lib.rs","byte_start":3568,"byte_end":3573,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":1391},"to":{"krate":0,"index":106}}]}